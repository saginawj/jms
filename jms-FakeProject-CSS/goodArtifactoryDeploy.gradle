//THIS IS THE GOOD ARTIFACTORY BUILD

apply plugin: 'java'
apply plugin: 'eclipse'	
//apply plugin: "com.jfrog.artifactory"

buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath "org.jfrog.buildinfo:build-info-extractor-gradle:3.0.1"
  }
}

apply plugin: "com.jfrog.artifactory"

//BEGIN ARTIFACTORY
artifactory {
  contextUrl = 'http://localhost:8081/artifactory' 
  publish {
    contextUrl = 'http://localhost:8081/artifactory' 
    //A closure defining publishing information
    repository {
      repoKey = 'jms-snapshots-logal'   //The Artifactory repository key to publish to
      //+username = 'deployer'          //The publisher user name
      //password = 'deployerPaS*'       //The publisher password
    }
    defaults {
        //This closure defines defaults for all 'artifactoryPublish' tasks of all projects the plugin is applied to
        //publications ('ivyJava','mavenJava','foo')                     //Optional list of publications (names or objects) to publish.

        publishBuildInfo = true   //Publish build-info to Artifactory (true by default)
        publishArtifacts = true   //Publish artifacts to Artifactory (true by default)
    }
  }
  resolve {
    contextUrl = 'http://localhost:8081/artifactory'  
    repository {
      repoKey = 'jms-snapshots-logal' 
      //username = 'resolver'       //Optional resolver user name (leave out to use anonymous resolution)
      //password = 'resolverPaS*'   //The resolver password
      maven = true                //Resolve Maven-style artifacts and descriptors (true by default)
    }
  }
  // Redefine basic properties of the build info object
  clientConfig.setIncludeEnvVars(true)
  clientConfig.info.addEnvironmentProperty('test.adding.dynVar',new java.util.Date().toString())
  clientConfig.info.setBuildName('jms-FakeProject-CSS')
  clientConfig.info.setBuildNumber('' + new java.util.Random(System.currentTimeMillis()).nextInt(20000))
}




///BEGIN REGULAR
sourceCompatibility = 1.8
version = '1.0'

repositories {
    mavenCentral()
   //jcenter()
    //maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local' }
}




dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
    //classpath "org.jfrog.buildinfo:build-info-extractor-gradle:3.0.x-SNAPSHOT"
    //classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '3.0.x-SNAPSHOT')
}

//added to base file
test {
	ignoreFailures = true
	reports.html.enabled = true
	systemProperties 'property': 'value'
   
    testLogging {
        events "started", "skipped", "failed"
        exceptionFormat "full"
        info.events = ["failed", "skipped"]
	}
  onOutput { descriptor, event ->
     logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
  } 
 }


