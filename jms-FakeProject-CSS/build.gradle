apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'maven-publish'
//apply plugin: 'artifactory-publish'

//Artifactory Buildscript
buildscript {
  repositories {
    jcenter()
    maven {
            url 'http://localhost:8081/artifactory'  //'http://localhost:8081/artifactory/plugins-release'
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
  }
  dependencies {
    classpath "org.jfrog.buildinfo:build-info-extractor-gradle:3.0.1"
  }
}
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

apply plugin: "com.jfrog.artifactory"
//Artifactory Buildscript

repositories {
	mavenCentral()
	flatDir dirs: "${projectDir}"

}
configurations {
	compile
    //sme text here to change
}
dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
    compile files('aFakeJar-v1.jar')
}


//ARTIFACTORY SCRIPT
artifactory {
  contextUrl = 'http://localhost:8081/artifactory' 
  publish {
    contextUrl = 'http://localhost:8081/artifactory' 
    //A closure defining publishing information
    repository {
      repoKey = 'jms-snapshots-logal'   //The Artifactory repository key to publish to
      //+username = 'deployer'          //The publisher user name
      //password = 'deployerPaS*'       //The publisher password
    }
    defaults {
		publications ('mavenJava')  

        publishBuildInfo = true   //Publish build-info to Artifactory (true by default)
        publishArtifacts = true   //Publish artifacts to Artifactory (true by default)
    }
  }
  resolve {
    contextUrl = 'http://localhost:8081/artifactory'  
    repository {
      repoKey = 'jms-snapshots-logal' 
      //username = 'resolver'       //Optional resolver user name (leave out to use anonymous resolution)
      //password = 'resolverPaS*'   //The resolver password
      maven = true                //Resolve Maven-style artifacts and descriptors (true by default)
    }
  }
  // Redefine basic properties of the build info object
  clientConfig.setIncludeEnvVars(true)
  clientConfig.info.addEnvironmentProperty('test.adding.dynVar',new java.util.Date().toString())
  clientConfig.info.setBuildName('jms-FakeProject-CSS')
  clientConfig.info.setBuildNumber('' + new java.util.Random(System.currentTimeMillis()).nextInt(20000))
}





